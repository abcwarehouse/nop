@using Nop.Core;
@* ABC: custom *@
@using Nop.Services.Localization;
@using SevenSpikes.Nop.Plugins.AjaxCart.Domain;

@inject NopAjaxCartSettings nopAjaxCartSettings;
@inject IWorkContext workContext;
@inject ILocalizationService localizationService;

@{
    // ABC: we always use Pavilion
    var themeFolder = "Pavilion";

    Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxCart/Themes/" + themeFolder + "/Content/ajaxCart.css");

    var supportRtl = (await workContext.GetWorkingLanguageAsync()).Rtl;
    if (supportRtl)
    {
        Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxCart/Themes/" + themeFolder + "/Content/ajaxCart.rtl.css");
    }

    Html.AddScriptParts(ResourceLocation.Footer, "~/Plugins/SevenSpikes.Core/Scripts/sevenspikes.core.min.js");
    Html.AddScriptParts(ResourceLocation.Footer, "~/Plugins/SevenSpikes.Core/Scripts/jquery.json-2.4.min.js");
    Html.AddScriptParts(ResourceLocation.Footer, "~/Plugins/SevenSpikes.Nop.Plugins.AjaxCart/Scripts/AjaxCart.min.js");

    var kendoVersion = "2020.1.406";

    var shoppingCartSuccessMessage = string.Format(T("Products.ProductHasBeenAddedToTheCart.Link").Text, Url.RouteUrl("ShoppingCart"));
    var wishlistSuccessMessage = string.Format(T("Products.ProductHasBeenAddedToTheWishlist.Link").Text, Url.RouteUrl("Wishlist"));

    /*
        We usually use AddScriptParts but in this case, we need to use AppendScriptParts and reverse the order of adding the kendo js files in order for other plugins such as HelpDesk,
        which includes kendo.web.min.js to work properly.
    */

    Html.AppendScriptParts(ResourceLocation.Footer, $"~/lib/kendo/{kendoVersion}/js/kendo.window.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, $"~/lib/kendo/{kendoVersion}/js/kendo.popup.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, $"~/lib/kendo/{kendoVersion}/js/kendo.draganddrop.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, $"~/lib/kendo/{kendoVersion}/js/kendo.userevents.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, $"~/lib/kendo/{kendoVersion}/js/kendo.core.min.js");

    // ABC: custom CSS
    Html.AddCssFileParts("~/Plugins/Misc.AbcFrontend/styles/ajax-cart.css");
}

<div class="ajaxCartInfo" data-getAjaxCartButtonUrl="@Url.Action("GetAjaxCartButtonsAjax", "NopAjaxCart")"
     data-productPageAddToCartButtonSelector="@nopAjaxCartSettings.ProductPageAddToCartButtonSelector"
     data-productBoxAddToCartButtonSelector="@nopAjaxCartSettings.ProductBoxAddToCartButtonSelector"
     data-productBoxProductItemElementSelector="@nopAjaxCartSettings.ProductBoxProductItemElementSelector"
     data-useNopNotification="@nopAjaxCartSettings.UseNopNotification"
     data-nopNotificationCartResource="@shoppingCartSuccessMessage"
     data-nopNotificationWishlistResource="@wishlistSuccessMessage"
     data-enableOnProductPage="@nopAjaxCartSettings.EnableOnProductPage"
     data-enableOnCatalogPages="@nopAjaxCartSettings.EnableOnCatalogPages"
     data-miniShoppingCartQuatityFormattingResource="@T("ShoppingCart.HeaderQuantity")"
     data-miniWishlistQuatityFormattingResource="@T("Wishlist.HeaderQuantity")"
     data-addToWishlistButtonSelector="@nopAjaxCartSettings.AddToWishlistButtonSelector">
</div>

@Html.Hidden("addProductVariantToCartUrl", Url.Action("AddProductFromProductDetailsPageToCartAjax", "NopAjaxCartShoppingCart"))
@Html.Hidden("addProductToCartUrl", Url.Action("AddProductToCartAjax", "NopAjaxCartShoppingCart"))
@Html.Hidden("miniShoppingCartUrl", Url.Action("MiniShoppingCart", "NopAjaxCartShoppingCart"))
@Html.Hidden("flyoutShoppingCartUrl", Url.Action("NopAjaxCartFlyoutShoppingCart", "NopAjaxCartShoppingCart"))
@Html.Hidden("checkProductAttributesUrl", Url.Action("CheckIfProductOrItsAssociatedProductsHasAttributes", "NopAjaxCartCatalog"))
@Html.Hidden("getMiniProductDetailsViewUrl", Url.Action("GetMiniProductDetailsView", "NopAjaxCartCatalog"))
@Html.Hidden("flyoutShoppingCartPanelSelector", Html.Encode(nopAjaxCartSettings.FlyoutCartPanelSelector))
@Html.Hidden("shoppingCartMenuLinkSelector", Html.Encode(nopAjaxCartSettings.ShoppingCartMenuLinkSelector))
@Html.Hidden("wishlistMenuLinkSelector", Html.Encode(nopAjaxCartSettings.WishlistMenuLinkSelector))

@await Component.InvokeAsync("NopAjaxCartAdditionalPanelsToUpdate")

@*
    Listen to class changes in slide-out to prevent Yscrolling
*@
<script>
    $(document).ready(function() {
        // Check for when ajaxCart appears:

        function callback(mutationList, observer) {
            mutationList.forEach(function(mutation) {
                if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
                    // need to determine if opened or closed, and add/remove  the class appropriately
                    console.log("attribute changed");
                    document.body.classList.add("scrollYRemove");
                }
            })
        }

        var observer = new MutationObserver(function (mutations, me) {
        var ajaxCartSlideOut = document.querySelector('.ajaxCart');
            if (ajaxCartSlideOut) {
                me.disconnect(); // stop looking for ajaxCart
                const options = {
                    attributes: true
                }

                const slideoutOpenObserver = new MutationObserver(callback)
                slideoutOpenObserver.observe(ajaxCartSlideOut, options)

                return;
            }
        });

        // observes for finding ajaxCart
        observer.observe(document, {
            childList: true,
            subtree: true
        });
    });
</script>