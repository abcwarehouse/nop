@model IDictionary<ShoppingCartItem, List<ProductAttributeValue>>

@using Nop.Plugin.Misc.AbcCore.Infrastructure
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Catalog
@using Nop.Web.Models.Checkout
@using Nop.Services.Catalog

@inject IProductService productService

@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-shipping-method-page");
}

<div class="page checkout-page shipping-method-page">
    @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Warranty })
    <div class="page-title">
        <h1>Select Warranty</h1>
    </div>
    <div class="page-body checkout-data">
        <div class="section warranty-selection">
            @await Component.InvokeAsync("Widget", new { widgetZone = CustomPublicWidgetZones.OpCheckoutWarrantyTop })
            @using (Html.BeginRouteForm("WarrantySelection", FormMethod.Post))
            {
                <div class="section warranty-selection">
                    @{ int warrGroupIdentifier = 0; }
                    @foreach (var keyValue in Model)
                    {
                        string noWarranty = "No Additional Warranty ($0)";
                        string baseId = "WarrantyOption_";
                        int option = 1;
                        var product = await productService.GetProductByIdAsync(@keyValue.Key.ProductId);
                        var productName = product.Name;

                        string radioId = baseId + option + "_" + warrGroupIdentifier;

                        <h3>@productName</h3>
                        <ul class="option-list">
                            @foreach (var value in keyValue.Value)
                            {
                                string displayText = @value.Name + " ($" + Math.Round(value.PriceAdjustment, 2) + ")";

                                <li>
                                    <input id="@radioId" type="radio" name="@keyValue.Key.Id" value="@value.Id" />
                                    <label for="@radioId"> @displayText </label>
                                </li>
                                ++option;
                                radioId = baseId + option + "_" + warrGroupIdentifier;
                            }
                            <li>
                                <input id="@radioId" type="radio" name="@keyValue.Key.Id" value="NoWarranty" checked="checked" />
                                <label for="@radioId"> @noWarranty </label>
                            </li>
                        </ul>
                        warrGroupIdentifier++;
                    }
                </div>
                <div class="buttons">
                    <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="button-1 shipping-method-next-step-button" />
                </div>
            }
            @await Component.InvokeAsync("Widget", new { widgetZone = CustomPublicWidgetZones.OpCheckoutWarrantyBottom })
        </div>
    </div>
</div>
