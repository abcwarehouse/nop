@using System.Linq;
@using SevenSpikes.Nop.Conditions.Domain;
@inject AdminAreaSettings adminAreaSettings

@model dynamic

@{
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;
}

<div class="card-body">
    @await Html.PartialAsync("Table", new DataTablesModel
    {
        Name = "customer-overrides-grid",
        UrlRead = new DataUrl("CustomerOverridesList", "CustomerOverridesAdmin", new RouteValueDictionary { ["entityType"] = Model.EntityType, ["entityId"] = Model.EntityId }),
        UrlUpdate = new DataUrl("CustomerOverridesUpdate", "CustomerOverridesAdmin", null),
        UrlDelete = new DataUrl("CustomerOverridesDelete", "CustomerOverridesAdmin", null),
        Length = defaultGridPageSize,
        LengthMenu = gridPageSizes,
        ColumnCollection = new List<ColumnProperty>
        {
            new ColumnProperty(nameof(OverridedCustomerModel.CustomerName))
            {
                Title = T("SevenSpikes.Conditions.Admin.CustomerOverrides.CustomerName").Text
            },
            new ColumnProperty(nameof(OverridedCustomerModel.CustomerEmail))
            {
                Title = T("SevenSpikes.Conditions.Admin.CustomerOverrides.CustomerEmail").Text
            },
            new ColumnProperty(nameof(OverridedCustomerModel.Included))
            {
                Title = T("SevenSpikes.Conditions.Admin.CustomerOverrides.OverrideState").Text,
                Render = new RenderCustom("includedStateRender"),
                Editable = true,
                EditType = EditType.Checkbox
            },
            new ColumnProperty(nameof(OverridedCustomerModel.Id))
            {
                Width = "80",
                Render = new RenderButtonsInlineEdit()
            },
            new ColumnProperty(nameof(OverridedCustomerModel.Id))
            {
                Width = "80",
                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text)
            }
        }
    })
</div>

<script>

    function includedStateRender(data, type, row, meta) {
        return '<p nop-value="' + row.Included + '">' + row.OverrideState + '</p>';
    }
</script>

<div class="card-footer">
    <button type="submit" id="btnAddNewCustomer" name="btnAddNewCustomer"
            onclick="javascript:OpenWindow('@(Url.Action("CustomerOverridesPopup", "CustomerOverridesAdmin", new { entityType = Model.EntityType, entityId = Model.EntityId, btnId = "btnRefreshCustomers" }))', 800, 700, true); return false;"
            class="btn btn-primary">
        @T("SevenSpikes.Conditions.Admin.CustomerOverrides.AddNew")
    </button>
    <input type="submit" id="btnRefreshCustomers" name="btnRefreshCustomers" style="display: none" />
    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnRefreshCustomers').click(function (e) {
                //refresh grid
                e.preventDefault(); //don't reload the page

                var customerOverridesGrid = $("#customer-overrides-grid").DataTable();
                customerOverridesGrid.ajax.reload();

                //return false to don't reload a page
                return false;
            });
        });
    </script>
</div>

