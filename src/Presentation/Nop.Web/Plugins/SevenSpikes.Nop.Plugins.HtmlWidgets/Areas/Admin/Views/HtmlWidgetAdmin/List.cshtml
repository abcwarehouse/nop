@model HtmlWidgetSearchModel
@inject AdminAreaSettings adminAreaSettings

@inject IGenericAttributeService genericAttributeService
@inject IWorkContext workContext
@{
    Layout = AdminViewLocations.AdminLayoutViewPath;

    Html.SetActiveMenuItemSystemName("SevenSpikes.Plugins.HtmlWidgets.Admin.Submenus.ManageHtmlWidgets");

    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;

    const string hideSearchBlockAttributeName = "HtmlWidgetsListPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<nop-antiforgery-token />

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("SevenSpikes.Plugins.HtmlWidgets.Admin.Entities.HtmlWidget")
    </h1>
    <div class="float-right">

        <a href="Create" class="btn bg-primary">
            <i class="fa fa-plus-square"></i>
            @T("SevenSpikes.Plugins.HtmlWidgets.Admin.Entities.HtmlWidget.AddNew")
        </a>

    </div>
</div>

<section class="content">
    <div class="form-horizontal">
        @await Html.TrialMessageAsync(Model.IsTrialVersion, Plugin.Name, Plugin.UrlInStore)
        <div class="cards-group">
            <div class="card card-default card-search">
                <div class="card-body">
                    <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                        <div class="search-text">@T("Admin.Common.Search")</div>
                        <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                        <div class="icon-collapse"><i class="fa" aria-hidden="true"></i></div>
                    </div>
                    <div class="search-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchWidgetName" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="SearchWidgetName" />
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchWidgetContent" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="SearchWidgetContent" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-8 offset-md-4">
                                <button type="button" id="search-html-widgets" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card card-default">
                <div class="card-body">
                    @await Html.PartialAsync("Table", new DataTablesModel
                    {
                        Name = "html-widgets-grid",
                        UrlRead = new DataUrl("List", "HtmlWidgetAdmin", null),
                        UrlDelete = new DataUrl("DeleteHtmlWidget", "HtmlWidgetAdmin", null),
                        Length = defaultGridPageSize,
                        LengthMenu = gridPageSizes,
                        SearchButtonId = "search-html-widgets",
                        Filters = new List<FilterParameter>
                        {
                            new FilterParameter(nameof(Model.SearchWidgetName)),
                            new FilterParameter(nameof(Model.SearchWidgetContent))
                        },
                        ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(HtmlWidgetModel.Name))
                            {
                                Title = T("SevenSpikes.Plugins.HtmlWidgets.Admin.Entities.HtmlWidget.Name").Text
                            },
                            new ColumnProperty(nameof(HtmlWidgetModel.HtmlContent))
                            {
                                Title = T("SevenSpikes.Plugins.HtmlWidgets.Admin.Entities.HtmlWidget.HtmlContent").Text
                            },
                            new ColumnProperty(nameof(HtmlWidgetModel.Visible))
                            {
                                Title = T("SevenSpikes.Plugins.HtmlWidgets.Admin.Entities.HtmlWidget.Visible").Text,
                                Render = new RenderCustom("renderVisible"),
                                Width = "70"
                            },
                            new ColumnProperty(nameof(HtmlWidgetModel.Id))
                            {
                                Render = new RenderCustom("renderEditButton"),
                                Width = "100"
                            },
                            new ColumnProperty(nameof(HtmlWidgetModel.Id))
                            {
                                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                                Width = "100"
                            }
                        }
                    })
                </div>
            </div>
        </div>
    </div>
</section>

<script type="text/javascript">

    function renderVisible(data, type, row, meta) {

        if (row.Visible) {

            return '<i class="fa fa-check true-icon"></i>';
        }
        else {

            return '<i class="fa fa-close false-icon"></i>';
        }
    }

    function renderEditButton(data, type, row, meta) {

        return '<a class="btn btn-default" href="Edit/' + data + '" title="@T("Admin.Common.Edit")">' +
            '<i class="fas fa-pencil-alt"></i>' +
            '@T("Admin.Common.Edit")' +
            '</a>';
    }
</script>