@model ProductDetailsModel.ProductPriceModel
@using Nop.Core
@using Nop.Core.Domain.Tax

@inject IWorkContext workContext

@if (!Model.CustomerEntersPrice)
{
    <div class="prices">
        @if (Model.CallForPrice)
        {
            @*call for price*@
            <div class="product-price call-for-price">
                <span>@T("Products.CallForPrice")</span>
            </div>
        }
        else
        {
	        <div class="@if (string.IsNullOrWhiteSpace(Model.PriceWithDiscount))
	            {
					<text>product-price</text>
				}
	            else
	            {
					<text>non-discounted-price</text>
				}">

                @*render price*@
                <span @if (string.IsNullOrWhiteSpace(Model.PriceWithDiscount)) { <text> id="price-value-@(Model.ProductId)" class="price-value-@(Model.ProductId)" </text> }>
                    @Html.Raw(Model.Price)
                </span>
            </div>
            if (!string.IsNullOrWhiteSpace(Model.PriceWithDiscount))
            {
                @*discounted price*@
                <div class="product-price discounted-price">
	                <label>@T("Products.Price.WithDiscount"):</label>
                    <span class="price-value-@(Model.ProductId)">
                        @Html.Raw(Model.PriceWithDiscount)
                    </span>
	            </div>
	        }
	        if (!String.IsNullOrWhiteSpace(Model.OldPrice))
	        {
	            @*old price*@
	            <div class="old-product-price">
	                <label>@T("Products.Price.OldPrice"):</label>
	                <span>@Model.OldPrice</span>
                </div>
            }
            if (!string.IsNullOrEmpty(Model.BasePricePAngV))
            {
                <div class="base-price-pangv" id="base-price-pangv-@Model.ProductId">
                    @Model.BasePricePAngV
                </div>
            }
            if (Model.DisplayTaxShippingInfo)
            {
                var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                //of course, you can modify appropriate locales to include VAT info there
                <div class="tax-shipping-info">
                    @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                </div>
            }
	        if (Model.IsRental)
	        {
	            <div class="rental-price">
	                <label>@T("Products.Price.RentalPrice"):</label>
	                <span>@Model.RentalPrice</span>
	            </div>
	        }
	    }
    </div>
}
